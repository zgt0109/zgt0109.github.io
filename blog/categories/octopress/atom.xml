<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Blog Like a Hacker.]]></title>
  <link href="http://zgt0109.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://zgt0109.github.io/"/>
  <updated>2018-11-24T17:03:05+08:00</updated>
  <id>http://zgt0109.github.io/</id>
  <author>
    <name><![CDATA[zgt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何用octopress搭建个人静态博客]]></title>
    <link href="http://zgt0109.github.io/blog/2018/11/23/14-octopress-install/"/>
    <updated>2018-11-23T14:13:45+08:00</updated>
    <id>http://zgt0109.github.io/blog/2018/11/23/14-octopress-install</id>
    <content type="html"><![CDATA[<blockquote><p>Octopress + Github 搭建个人博客</p></blockquote>

<p><img src="http://pi4lki9yr.bkt.clouddn.com/octopress.jpg" alt="Octopress" /></p>

<!-- more -->


<ul>
<li>Octopress 是一个基于 Jekyll 博客引擎开发的博客框架，可以很方便的生成静态页面用于在 Github Pages 上展现。官方说法：</li>
</ul>


<blockquote><p>A blogging framework for hackers。</p></blockquote>

<p>本文主要介绍在 mac 下如何利用 Octopress 和 Github 搭建个人博客的基础环境。</p>

<h4>1. <a href="https://ruby-china.org/wiki/install_ruby_guide">安装Ruby</a></h4>

<h4>2. <a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">安装Git</a></h4>

<p>终端输入</p>

<pre><code class="">    ssh-add ~/id_rsa
    ssh -T git@github.com 
</code></pre>

<p>如下结果</p>

<pre><code>    Hi xxx!You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

<p>则表明git配置成功，接下来可以上传文件到 github 上了。</p>

<h4>3. 安装Octorpress</h4>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<p>修改安装源</p>

<pre><code>$ gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/
$ gem sources -l
https://gems.ruby-china.com
# 确保只有 gems.ruby-china.com
</code></pre>

<p>安装Octorpress相关插件
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>bundle exec rake install  # 安装 octopress 默认主题
</span><span class='line'>bundle exec rake generate # 生成 octopress 博客
</span><span class='line'>bundle exec rake preview  # 本地预览 octopress 博客&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bundle exec rake &lsquo;new_post[title]&rsquo;     # 新建博文文件</span></code></pre></td></tr></table></div></figure></p>

<h4>4. 将 Octopress 博客部署到 github 上</h4>

<p>登录github网站，创建一个仓库，必须命名为 username.github.io，username跟自己github用户名一致</p>

<pre><code>zgt0109.github.io
</code></pre>

<p>完整项目地址</p>

<pre><code>git@github.com:zgt0109/zgt0109.github.io.git
</code></pre>

<p>终端输入</p>

<pre><code>bundle exec rake setup_github_pages
</code></pre>

<p>会提示你输入github项目的Url路径，这个通过在 github 的项目右下方找到。例如
<code>
git@github.com:zgt0109/zgt0109.github.io.git
</code></p>

<p>将项目部署到github上面
<code>
git add .   #注意add后面不要漏了 "."号
git commit -m "first commit"
git push origin source
bundle exec rake deploy # rake deploy 会直接 push Octopress目录中 master 分支
</code></p>

<p>然后访问</p>

<pre><code>zgt0109.github.io
</code></pre>

<p>不出意外的话，就能够看到自己的博客了。</p>

<h4>5. 优化 Octorpress</h4>

<p>5.1替换Google JS公共库</p>

<p>Octopress 默认使用的是 Google 的 JS 公共库地址，加载的过程特别的慢。
所以我们要把它改为百度的 JS 公共库 ，需要把
<code>
/source/_includes/head.html
</code>
文件中的 Google 公共库地址</p>

<p>```js</p>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>


<pre><code>
改为：
</code></pre>

<script src="http://libs.baidu.com/jquery/1.9.1/jquery.min.js"></script>


<pre><code>
5.2添加首页右侧 Category List

1.在 plugins 目录中创建category_list_tag.rb文件，文件内容如下：
</code></pre>

<p>module Jekyll
  class CategoryListTag &lt; Liquid::Tag
    def render(context)
      html = &ldquo;&rdquo;
      categories = context.registers[:site].categories.keys
      categories.sort.each do |category|
        posts_in_category = context.registers[:site].categories[category].size
        category_dir = context.registers[:site].config[&lsquo;category_dir&rsquo;]
        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, &lsquo;-&rsquo;).gsub(/-{2,}/, &lsquo;-&rsquo;).downcase)
        html &lt;&lt; &ldquo;<li class='category'><a href='http://zgt0109.github.io/#{category_url}/'>#{category} (#{posts_in_category})</a></li>\n&rdquo;
      end
      html
    end
  end
end</p>

<p>Liquid::Template.register_tag(&lsquo;category_list&rsquo;, Jekyll::CategoryListTag)
```</p>

<p>2.把下面内容添加到source/_includes/asides/category_list.html文件</p>

<pre><code class="bash">&lt;section&gt; 
    &lt;h1&gt;Category List&lt;/h1&gt;
    &lt;ul id="categories"&gt; 
        <li class='category'><a href='/blog/categories/docker/'>docker (1)</a></li>
<li class='category'><a href='/blog/categories/mac/'>mac (1)</a></li>
<li class='category'><a href='/blog/categories/octopress/'>octopress (1)</a></li>
<li class='category'><a href='/blog/categories/rails/'>rails (1)</a></li>
  
    &lt;/ul&gt;
&lt;/section&gt;
</code></pre>

<p>3.修改_config.yml文件，用 command+f 找到default_asides，然后添加asides/category_list.html，值之间以逗号隔开。</p>

<pre><code class="bash">default_asides: [asides/category_list.html, asides/recent_posts.html]
</code></pre>

<p>5.3添加社会化评论</p>

<p>1.登录 <a href="https://disqus.com/">Disqus</a>，创建一个账号，然后点击 Add Disqus to your site，输入 Site name ，例如 boy，然后点击 Finish registration。这里页面会自动生成shortname，记录下来，待会有用。</p>

<p>2.打开_config.yml文件，找到</p>

<pre><code># Disqus Comments 
disqus_short_name:  
disqus_show_comment_count: false
</code></pre>

<p>设置 disqus_short_name 为刚刚创建的 Disqus 生成的 shortname，例如 zgt0109</p>

<p>把false改为true。</p>
]]></content>
  </entry>
  
</feed>
